name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  ci-linux:
    runs-on: 'ubuntu-latest'
    strategy:
        matrix:
            include:
            - pyversion: 'cp38-cp38'
            - pyversion: 'cp39-cp39'
            - pyversion: 'cp310-cp310'
            - pyversion: 'cp311-cp311'
            - pyversion: 'cp312-cp312'
    steps:
      - uses: actions/checkout@v4
      - name: Build packages
        env:
          IVPM_PYTHON: /opt/python/${{ matrix.pyversion }}/bin/python
          BUILD_NUM: ${{ github.run_id }}
        run: >
          docker run --rm
          --volume "$(pwd):/io"
          --env IVPM_PYTHON
          --env BUILD_NUM
          --workdir /io
          quay.io/pypa/manylinux2014_x86_64
          /io/scripts/build_linux.sh
      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
            python3 -m pip install twine
            python3 -m twine upload wheelhouse/*.whl

#  ci-linux-docs:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.1
#      - name: Install Dependencies
#        run: |
#          sudo apt-get update
#          sudo apt-get install python3
#          python3 -m pip install ivpm
#          python3 -m ivpm update --anonymous-git
#          ./packages/python/bin/pip install packaging jinja2
#      - name: Build Docs
#        run: |
#          ./packages/python/bin/python -m sphinx.cmd.build -M html \
#            ./doc/source doc/build
#          touch doc/build/html/.nojekyll
#      - name: Deploy Docs
#        if: startsWith(github.ref, 'refs/heads/main')
#        uses: JamesIves/github-pages-deploy-action@4.1.7
#        with:
#          branch: gh-pages
#          folder: doc/build/html

  ci-windows:
    runs-on: ${{ matrix.platform }}
    strategy:
        matrix:
            include:
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.8'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.9'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.10'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.11'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.12'
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Install Python ${{ matrix.spec }}
      uses: actions/setup-python@v4
      with:
        architecture: ${{ matrix.python_arch }}
        python-version: ${{ matrix.spec }}
    - uses: ilammy/msvc-dev-cmd@v1.13.0
      with:
        arch: ${{ matrix.build_arch }}
    - name: Build/Test Package
      env:
        BUILD_NUM: ${{ github.run_id }}
      run: |
        python -m pip install ivpm
        python -m ivpm update -a
        ./packages/python/Scripts/python -m pip install ninja cython setuptools wheel build twine
        echo "BUILD_NUM=$env:BUILD_NUM" > python/zsp_parser/__build_num__.py
        $env:PYTHONPATH = '$PWD.Path/packages/pyastbuilder/src'
        echo "PYTHONPATH: $env:PYTHONPATH"
        ./packages/python/Scripts/python setup.py build_ext
        ./packages/python/Scripts/python setup.py build bdist_wheel
    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/heads/main')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        ./packages/python/Scripts/python -m twine  upload dist/*.whl      
            

  macos:
    runs-on: macos-latest
    strategy:
        matrix:
            include:
            - pyversion: '3.8'
            - pyversion: '3.9'
            - pyversion: '3.10'
            - pyversion: '3.11'
            - pyversion: '3.12'
    steps:
      - uses: actions/checkout@v2
      - name: Install Python ${{ matrix.pyversion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Fetch dependencies
        run: |
          python3 --version
          python3 -m venv py
          ./py/bin/python3 -m pip install ivpm
          ./py/bin/python3 -m ivpm update -a
          ./packages/python/bin/python3 -m pip install cython setuptools wheel build twine
      - name: Build wheel
        env:
          BUILD_NUM: ${{ github.run_id }}
        run: |
          echo "BUILD_NUM=${BUILD_NUM}" > python/zsp_parser/__build_num__.py
          ./packages/python/bin/python3 setup.py build_ext --inplace
          ./packages/python/bin/python3 setup.py bdist_wheel
      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          ./packages/python/bin/python3 -m twine  upload dist/*.whl      
