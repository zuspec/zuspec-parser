name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  ci-linux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v1
      - name: Fetch python build dependencies
        run: |
          yum update -y
          yum install -y glibc-static 
          yum install -y java-11-openjdk-devel uuid-devel libuuid-devel
          for py in cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312; do
            /opt/python/${py}/bin/python -m pip install ninja wheel cython
          done
      - name: Fetch source dependencies
        run: |
          export IVPM_PYTHON=/opt/python/cp38-cp38m/bin/python
          ${IVPM_PYTHON} -m pip install ivpm twine auditwheel
          ${IVPM_PYTHON} -m ivpm update -a
      - name: Build packages
        run: |
          export BUILD_NUM=$GITHUB_RUN_ID
          for py in cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312; do
            /opt/python/${py}/bin/python setup.py bdist_wheel
          done
      - name: Audit Wheels
        run: |
          for whl in dist/*.whl; do
              /opt/python/cp38-cp38m/bin/auditwheel repair $whl
              rm $whl
          done
          cp wheelhouse/*.whl dist
      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  ci-linux-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install python3
          python3 -m pip install ivpm
          python3 -m ivpm update --anonymous-git
      - name: Build Docs
        run: |
          ./packages/python/bin/python -m sphinx.cmd.build -M html \
            ./doc/source doc/build
          touch doc/build/html/.nojekyll
      - name: Deploy Docs
        if: startsWith(github.ref, 'refs/heads/main')
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: doc/build/html

  ci-windows:
    runs-on: ${{ matrix.platform }}
    strategy:
        matrix:
            include:
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.8'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.9'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.10'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.11'
            - platform: windows-latest
              build_arch: x64
              python_arch: x64
              spec: '3.12'
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Install Python ${{ matrix.spec }}
      uses: actions/setup-python@v2
      with:
        architecture: ${{ matrix.python_arch }}
        python-version: ${{ matrix.spec }}
    - uses: ilammy/msvc-dev-cmd@v1.13.0
      with:
        arch: ${{ matrix.build_arch }}
    - name: Build/Test Package
      env:
        BUILD_NUM: ${{ github.run_id }}
      run: |
        python -m pip install ivpm
        python -m ivpm update -a
        ./packages/python/Scripts/python -m pip install ninja cython setuptools wheel build twine
        echo "BUILD_NUM=$env:BUILD_NUM" > python/zsp_parser/__build_num__.py
        $env:PYTHONPATH = $PWD.Path/packages/pyastbuilder/src
        ./packages/python/Scripts/python setup.py build bdist_wheel
            

      
      
#  ci-macos-arm64:
#    runs-on: [self-hosted, macOS, ARM64]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch source dependencies
#        run: |
#          export IVPM_PYTHON=python3
#          ${IVPM_PYTHON} -m pip install ivpm 
#          ${IVPM_PYTHON} -m ivpm update -a
#          ./packages/python/bin/python3 -m pip install twine
#      - name: Build packages
#        run: |
#          export BUILD_NUM=$GITHUB_RUN_ID
#          ./packages/python/bin/python3 setup.py bdist_wheel
#      - name: Publish to PyPi
#        if: startsWith(github.ref, 'refs/heads/main')
#        run: |
#          python3 -m twine upload dist/*
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#  ci-macos-x86_64:
#    runs-on: [self-hosted, macOS, ARM64]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch source dependencies
#        run: |
#          export IVPM_PYTHON=/usr/local/bin/python3
#          arch -x86_64 ${IVPM_PYTHON} -m pip install ivpm 
#          arch -x86_64 ${IVPM_PYTHON} -m ivpm update -a
#          arch -x86_64 ./packages/python/bin/python3 -m pip install twine
#      - name: Build packages
#        run: |
#          export BUILD_NUM=$GITHUB_RUN_ID
#          arch -x86_64 ./packages/python/bin/python3 setup.py bdist_wheel --plat-name macosx_10_9_x86_64
#      - name: Publish to PyPi
#        if: startsWith(github.ref, 'refs/heads/main')
#        run: |
#          arch -x86_64 ./packages/python/bin/python3 -m twine upload dist/*_x86_64.whl
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#
